# Now, create the reducer. Given the mapper result from the previous exercise, the reducer must print (not return) one line per UNIT, with the total number of ENTRIESn_hourly during May (which is our data duration), separated by a tab. An example of exit line from the reducer may look like this: 'R001 \ t500625.0'
# You can assume that the entry for the reducer is ordered in a way that all lines corresponding to a particular unit are grouped. However, the reducer exit will have repetition, as there are stores that appear in different files' locations.
# Export your reducer into a file named reducer_result.txt and send it with your submission.

import sys

def reducer():
    
    old_UNIT = None
    total_ENTRIESn_hourly = 0.0
    for line in sys.stdin:
            data_mapped = line.strip().split('\t')
            if len(data_mapped) != 2 :
                continue
            
            this_UNIT, this_ENTRIESn_hourly = data_mapped
            
            if old_UNIT and old_UNIT != this_UNIT :
                print(old_UNIT, "\t", total_ENTRIESn_hourly)
                old_UNIT = this_UNIT
                total_ENTRIESn_hourly = 0.0
                
            old_UNIT = this_UNIT
            total_ENTRIESn_hourly += float(this_ENTRIESn_hourly)
    
    if old_UNIT != None :
        print(old_UNIT, "\t", total_ENTRIESn_hourly)
            
            

        
reducer()
#sys.stdin = open('mapper_result.txt')
